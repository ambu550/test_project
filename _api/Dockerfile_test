FROM php:7.3-fpm

#RUN mkdir -p /usr/share/man/man1 && \
#    mkdir -p /usr/share/man/man7
RUN apt-get update && \
    apt-get install -y  nginx supervisor
#    unixodbc-dev zlib1g-dev libicu-dev g++ libldap2-dev  \
#    gcc make autoconf libc-dev pkg-config \
#    librabbitmq-dev \
#    libssh-dev \
#    && pecl install sqlsrv pdo_sqlsrv \
#    && printf "yes" | pecl install apcu \
#    && docker-php-ext-enable apcu
#
## Install xdebug
#RUN pecl install xdebug-2.9.8
##RUN docker-php-ext-enable xdebug
#
## Install ODBC driver for SQL server
#RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
#    curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
#    apt-get update -y
#RUN ACCEPT_EULA=Y apt-get -y install msodbcsql17
#
## Install Ldap
#RUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/
#RUN docker-php-ext-install ldap
#
## Type docker-php-ext-install to see available extensions
#RUN docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixodbc,/usr
#RUN docker-php-ext-install pcntl opcache pdo pdo_pgsql pdo_odbc
#
## adding amqp extension and rabbitmq library
#RUN docker-php-ext-install bcmath sockets \
#    && docker-php-ext-enable sockets \
#    && printf "\n" | pecl install amqp \
#    && rm -rf /tmp/pear \
#    && docker-php-ext-enable amqp
#
## Copy all project files to image
COPY . /var/www
#COPY .ssh /root/.ssh
#RUN chmod 700 /root/.ssh && \
#    chmod 600 /root/.ssh/id_rsa && \
#    chmod 644 /root/.ssh/id_rsa.pub && \
#    chmod 644 /root/.ssh/known_hosts
#
## Switch workdir
WORKDIR /var/www
#
## Install Composer
#RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=1.10.5
#RUN composer --version
#ENV APP_ENV=prod
#RUN composer install --no-interaction --no-suggest --no-progress --no-dev 2>&1
#
## Configuring LDAP cert
#COPY ./pup-local.crt /etc/ldap/pup-local.crt
#RUN echo "TLS_CACERT /etc/ldap/pup-local.crt" >> /etc/ldap/ldap.conf
#
# Configure NGINX
ADD ./.nginx/nginx.conf /etc/nginx/
ADD ./.nginx/service.conf /etc/nginx/sites-available/
RUN ln -s /etc/nginx/sites-available/service.conf /etc/nginx/sites-enabled/service.conf
RUN rm /etc/nginx/sites-enabled/default
RUN rm /etc/nginx/sites-available/default
RUN echo "upstream service-upstream { server localhost:9000; }" >> /etc/nginx/conf.d/upstream.conf
RUN usermod -u 1000 www-data
CMD ["nginx"]
#
#
#RUN mkdir -p /var/log/supervisor \
#    && mkdir -p /etc/supervisor/conf.d
#
## Set timezone
#ENV TZ=Europe/Kiev
#RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
#RUN "date"
#
#RUN echo 'alias sf4="php bin/console"' >> ~/.bashrc
#
#EXPOSE 9000
#
#ENTRYPOINT ["sh", "/var/www/entrypoint.sh"]
